@using CloudProjectCore.Models.ViewModels
@model PhotoModelForSinglePage

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div>
    <div class="row">
        <div class="col-md-6">
            <h2>
                Photo
            </h2>
        </div>
        <div class="col-md-6">
            @Html.ActionLink("Back to the gallery", "Gallery", "Gallery", null, htmlAttributes: new { @class = "btn btn-dark float-right" })
        </div>
    </div>

    <hr />
    <div class="container">
        <div class="col-md-12">
            @if (Model.UriForSheredImage != "")
            {
                <p>@Model.UriForSheredImage</p>
            }
            else
            {
                @await Html.PartialAsync("_PhotoForm", new SharePhotoModel()
               {
                   _id = Model._id.ToString(),
                   PhotoUri = Model.PhotoPhatOriginalSize,
                   DateOfExpire = DateTime.Now
               })
            }
        </div>
    </div>

    <hr />
    <div class="col-md-12">
        <dl class="dl-horizontal">

            @if (Model.ImageName != "")
            {
                <dt>
                    Name
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.ImageName)
                </dd>
            }

            @if (Model.Description != "")
            {
                <dt>
                    Description
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Description)
                </dd>
            }

            @if (Model.Tags != null && Model.Tags.Count != 0)
            {
                <dt>
                    Tags
                </dt>
                <dd>
                    @{
                        string tags = "";
                        foreach (string tag in Model.Tags)
                        {
                            tags += tag + " | ";
                        }

                        <div>| @tags</div>
                    }
                </dd>
            }

            @if (Model.PhotoTimeOfUpload != "")
            {
                <dt>
                    Photo uploaded in date
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.PhotoTimeOfUpload)
                </dd>
            }

            @if (Model.PhotoGpsLatitude != null && Model.PhotoGpsLongitude != null)
            {
                <hr />
                <div class="row">
                    <div class="col-md-1">
                        <dt>
                            Latitude
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.PhotoGpsLatitude)
                        </dd>
                    </div>
                    <div class="col-md-1">
                        <dt>
                            Longitude
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.PhotoGpsLongitude)
                        </dd>
                    </div>
                </div>
                <div id="accordion">
                    <div class="card">
                        <div id="headingOne">
                            <button class="btn col-12" data-toggle="collapse" data-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                                Show on map
                            </button>
                        </div>

                        <div id="collapseOne" class="collapse hide" aria-labelledby="headingOne" data-parent="#accordion">
                            @Html.HiddenFor(x => x._id, htmlAttributes: new { @id = "photoId" })
                            @await Html.PartialAsync("~/Views/Map/_Map.cshtml", new MapModel { SinglePhoto = true })
                        </div>
                    </div>
                </div>
                <hr />
            }
            else
            {
                @if (Model.PhotoGpsLatitude != null)
                {
                    <dt>
                        Latitude
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.PhotoGpsLatitude)
                    </dd>
                }

                @if (Model.PhotoGpsLongitude != null)
                {
                    <dt>
                        Longitude
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.PhotoGpsLongitude)
                    </dd>
                }
            }

            @if (Model.PhotoTagDateTime != "")
            {
                <dt>
                    Photo taken on date
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.PhotoTagDateTime)
                </dd>
            }

            @if (Model.PhotoTagImageWidth != "" && Model.PhotoTagImageHeight != "")
            {
                <dt>
                    Size
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.PhotoTagImageWidth) x @Html.DisplayFor(model => model.PhotoTagImageHeight)
                </dd>
            }
            else
            {
                @if (Model.PhotoTagImageWidth != "")
                {
                    <dt>
                        Width
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.PhotoTagImageWidth)
                    </dd>
                }

                @if (Model.PhotoTagImageHeight != "")
                {
                    <dt>
                        Height
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.PhotoTagImageHeight)
                    </dd>
                }
            }

            @if (Model.PhotoTagThumbnailEquipModel != "")
            {
                <dt>
                    Camera model
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.PhotoTagThumbnailEquipModel)
                </dd>
            }

            @if (Model.PhotoPhatOriginalSize != "")
            {
                <dt>
                    Image
                </dt>
                <dd>
                    <img src="@Html.DisplayFor(model => model.LPhotoPhatOriginalSizeWithSasKey)" class="img-fluid center-block">
                </dd>
            }
        </dl>
    </div>

    <!-- Button trigger modal -->
    <button type="button" class="btn-danger btn-lg btn-block" data-toggle="modal" data-target="#exampleModal">
        Delete image
    </button>

    <!-- Modal -->
    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Delete image</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this image?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    @using (Html.BeginForm("DeletePhotos", "Photo", FormMethod.Post))
                    {
                        @Html.Hidden("Photos[0]._id", Model._id);
                        @Html.Hidden("Photos[0].ToBeDelete", true);
                        <button type="submit" class="btn btn-danger">Delete</button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
